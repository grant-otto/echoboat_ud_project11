<launch>
    <arg name="namespace" default="ben"/>
    <arg name="operator_ip" default="192.168.100.142"/>
    <arg name="observer_ip" default="192.168.100.99"/>
    <arg name="logDirectory"/>
    <arg name="log_lidar" default="false"/>
  
    <include file="$(find ben_description)/launch/load.launch">
        <arg name="namespace" value="$(arg namespace)"/>
    </include>

    <include file="$(find ben_description)/launch/publish_state.launch">
        <arg name="namespace" value="$(arg namespace)"/>
    </include>
    
    <include file="$(find project11)/launch/robot_core.launch">
        <arg name="namespace" value="$(arg namespace)"/>
    </include>

    
    <node pkg="cw4_helm" type="cw4_helm_node" name="cw4_helm" ns="$(arg namespace)"/>
    <node pkg="control_by_web_x4xx_interface" type="cbw_x4xx_node.py" name="control_by_web_x4xx_interface" ns="$(arg namespace)"/>
    <node pkg="flir" type="flir_node.py" name="flir_engine" ns="$(arg namespace)">
      <param name="baseURL" value="http://192.168.10.63/"/>
    </node>

    <!-- <node pkg="br24_radar" type="br24_radar_node.py" name="br24_radar_node" ns="$(arg namespace)"> 
      <remap from="radar" to="sensors/radar"/>
      <param name="frameId" value="($arg namespace)/radar"/>
    </node>-->

    <node pkg="halo_radar" type="halo_radar" name="halo_radar" ns="$(arg namespace)/sensors">
      <rosparam param="hostIPs">["192.168.10.112", ]</rosparam>
      <param name="frameId" value="$(arg namespace)/radar"/>
    </node>

    <node pkg="posmv" type="posmv_node.py" name="posmv" ns="$(arg namespace)/sensors"/>
    <!--node pkg="radar_obstacle_detection" type="radar_obstacle_detection_node.py" name="radar_obstacle_detection"/-->

    <node pkg="kongsberg_em_control" type="kongsberg_em_control_node.py" name="kongsberg_em_control" ns="$(arg namespace)"/>
    <node pkg="kongsberg_em_control" type="endofline_listener.py" name="endofline_listener" ns="$(arg namespace)"/>

    <!--node pkg="kongsberg_em" type="kongsberg_em_node.py" name="kongsberg_em"/-->

    <!-- <include file="$(find velodyne_pointcloud)/launch/VLP16_points.launch" ns="$(arg namespace)/sensors/lidar">
      <arg name="frame_id" value="$(arg namespace)/lidar"/>
      <arg name="manager" value="$(arg namespace)_lidar_nodelet_manager"/>
    </include>

    <node pkg="octomap_server" type="octomap_server_node" name="octomap_server" ns="$(arg namespace)/sensors/lidar">
      <remap from="cloud_in" to="velodyne_points"/>
      <param name="resolution" value="0.5"/>
      <param name="frame_id" value="$(arg namespace)/map"/>
    </node> -->


    <node pkg="mru_transform" type="sensor_sync_node" name="sensor_sync" ns="$(arg namespace)">
      <param name="outTopicPrefix" value="sensors/oem/sync/"/>
      <param name="inTopicPrefix" value="sensors/oem/"/>
    </node>

    <node pkg="mbr" type="mbr_logging.py" name="mbr_logging" ns="$(arg namespace)"/>

    <include file="$(find ben_hardware)/launch/loggers.launch">
        <arg name="namespace" value="$(arg namespace)"/>
        <arg name="logDirectory" value="$(arg logDirectory)"/>
    </include>
    
    <include file="$(find ben_project11)/launch/log_throttled_panos.launch">
        <arg name="namespace" value="$(arg namespace)"/>
        <arg name="logDirectory" value="$(arg logDirectory)"/>
    </include>

    <include if="$(arg log_lidar)" file="$(find ben_project11)/launch/log_lidar.launch">
        <arg name="namespace" value="$(arg namespace)"/>
        <arg name="logDirectory" value="$(arg logDirectory)"/>
    </include>
    
    <node pkg="nmea_navsat_driver" type="nmea_topic_serial_reader" name="nmea_reader" ns="$(arg namespace)">
      <param name="port" value="/dev/ttyACM0"/>
      <param name="baud" value="38400"/>
      <remap from="nmea_sentence" to="sensors/nmea_sentence"/>
    </node>

    <include file="$(find ben_hardware)/launch/all_panos_thumbnails.launch">
        <arg name="namespace" value="$(arg namespace)"/>
    </include>

    <node pkg="cw4_nmea2000" type="nmea_conv_node.py" name="nmea_conv" ns="$(arg namespace)"/>

    <rosparam command="load" file="$(find ben_project11)/config/ben.yaml" ns="$(arg namespace)"/>
    <rosparam command="load" file="$(find ben_hardware)/config/ben.yaml" ns="$(arg namespace)"/>
    <param name="/$(arg namespace)/udp_bridge/remotes/operator/host" value="$(arg operator_ip)"/>
    <param name="/$(arg namespace)/udp_bridge/remotes/observer/host" value="$(arg observer_ip)"/>
</launch>
